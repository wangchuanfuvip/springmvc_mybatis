package com.taotao.cart.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.taotao.cart.pojo.Cart;
import com.taotao.cart.service.CartCookieService;
import com.taotao.cart.service.CartService;
import com.taotao.common.vo.TaotaoResult;

/**
 * 购物车相关API
 * 
 */
@RequestMapping(value = "cart")
@Controller
public class CartController {

    @Autowired
    private CartService cartService;
    
    @Autowired
    private CartCookieService cartCookieService;

    /**
     * 添加商品到购物车
     * 
     * @param cart
     * @return
     */
    @RequestMapping(value = "save", method = RequestMethod.POST)
    @ResponseBody
    public TaotaoResult saveItem(Cart cart,@RequestParam(value = "ttcart", required = false)String ttcart ) {
    	if(ttcart == null)
    		 return this.cartService.saveItem(cart);
    	else
    		return cartCookieService.saveCart(cart, ttcart);
    }

    
    /**
     * 根据用户ID查询购物车数据
     * 
     * @return
     */
    @RequestMapping(value = "query/{userId}", method = RequestMethod.GET)
    @ResponseBody
    public TaotaoResult queryCartList(@PathVariable("userId") Long userId) {
        return this.cartService.queryCartList(userId);
    }
    /**
     * 根据用户ID查询购物车数据
     * 
     * @return
     */
    @RequestMapping(value = "queryByItemIds/{userId}/{itemIds}", method = RequestMethod.GET)
    @ResponseBody
    public TaotaoResult queryCartList(@PathVariable("userId") Long userId,@PathVariable("itemIds") String itemIds) {
        return this.cartService.queryCartListByItemIds(userId,itemIds);
    }
    
    
    /**
     * 根据用户ID查询购物车数据
     * 
     * @return
     */
    @RequestMapping(value = "queryByCookie/{ttcart}", method = RequestMethod.GET)
    @ResponseBody
    public TaotaoResult queryCartListByCookie(@PathVariable("ttcart") String ttcart) {
        return this.cartCookieService.queryCartList(ttcart);
    }
    

    /**
     * 更新商品数量
     * 
     * @param userId
     * @param itemId
     * @param num
     * @return
     */
    @RequestMapping(value = "updateByCookie/{ttcart}/{itemId}/{num}", method = RequestMethod.GET)
    @ResponseBody
    public TaotaoResult updateNumByCookie(@PathVariable("ttcart") String ttcart, @PathVariable("itemId") Long itemId,
            @PathVariable("num") Integer num) {
        return this.cartCookieService.updateNum(ttcart, itemId, num);
    }

    
    /**
     * 更新商品数量
     * 
     * @param userId
     * @param itemId
     * @param num
     * @return
     */
    @RequestMapping(value = "update/num/{userId}/{itemId}/{num}", method = RequestMethod.POST)
    @ResponseBody
    public TaotaoResult updateNum(@PathVariable("userId") Long userId, @PathVariable("itemId") Long itemId,
            @PathVariable("num") Integer num) {
        return this.cartService.updateNum(userId, itemId, num);
    }
    
    
    /**
     * 删除购物车中的商品数据
     * 
     * @param userId
     * @param itemId
     * @return
     */
    @RequestMapping(value = "delete/{userId}/{itemId}", method = RequestMethod.POST)
    @ResponseBody
    public TaotaoResult delete(@PathVariable("userId") Long userId, @PathVariable("itemId") Long itemId) {
        return this.cartService.delete(userId, itemId);
    }
    
    /**
     * 删除购物车中的商品数据
     * 
     * @param userId
     * @param itemId
     * @return
     */
    @RequestMapping(value = "delete/{userId}/{itemId}", method = RequestMethod.POST)
    @ResponseBody
    public TaotaoResult delete2(@PathVariable("userId") Long userId, @PathVariable("itemId") Long itemId) {
        return this.cartService.delete(userId, itemId);
    }

}
